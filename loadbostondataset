# -*- coding: utf-8 -*-
"""
Created on Thu Jun  2 16:28:55 2022

@author: sabri

BOSTON.CSV LOAD regression
ISNAN?
TRAIN-TEST SPLIT
NORMALIZER- STANDARDSCALER
NN-6
COMPILE- OPTIMIZER-ADAM, LOSS=MSE, METRICS-MAE
"""

import sklearn.datasets as skdatasets
from sklearn import preprocessing
import tensorflow as tf 
from tensorflow import keras
from tensorflow.keras import layers, optimizers, losses, metrics
import numpy as np
from sklearn.model_selection import train_test_split, KFold
from sklearn.preprocessing import StandardScaler
from tensorflow.keras.callbacks import EarlyStopping, TensorBoard
import datetime, os
import pandas as pd

#read data from csv
file_path= r"C:\Users\sabri\Documents\PYTHON\DL\boston_data.csv"
boston= pd.read_csv(file_path, sep=',', header= 0 )

#%%
#chaeck for NA values
print(boston.isna().sum())




#%%
#Separate teh data into feature and labels
boston_features= boston.copy()
boston_labels= boston_features.pop('medv')

features_np= np.array(boston_features)
labels_np= np.array(boston_labels)


#%%

#train & test split

SEED=12345
x_train, x_test, y_train, y_test= train_test_split(boston_features, boston_labels, test_size=0.2, random_state=SEED)


#DAta normalisation
standardizer = StandardScaler()
standardizer.fit(x_train)
x_train= standardizer.transform(x_train)
x_test= standardizer.transform(x_test)

##DATA PREPARATION IS COMPLETED

#%%

#4. Construct NN model
model= keras.Sequential()
model.add(layers.Dense(512, activation='relu'))
model.add(layers.Dense(256, activation='relu'))
model.add(layers.Dense(128, activation='relu'))
model.add(layers.Dense(64, activation='relu'))
model.add(layers.Dense(32, activation='relu'))
model.add(layers.Dense(16, activation='relu'))
model.add(layers.Dense(1))


# compile
model.compile(optimizer='adam', loss='mse', metrics=['mae'])

# Train model
history=model.fit(x_train, y_train, validation_data=(x_test, y_test), batch_size=16, epochs=10)


